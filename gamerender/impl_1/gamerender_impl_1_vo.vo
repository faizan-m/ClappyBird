
// Verilog netlist produced by program backanno, Version Radiant (64-bit) 1.0.0.350.6

// backanno -n Verilog -o gamerender_impl_1_vo.vo -sp High-Performance_1.2V -w -neg -gui gamerender_impl_1.udb 
// Netlist created on Thu Apr 25 15:31:57 2019
// Netlist written on Thu Apr 25 15:32:01 2019
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade 6

`timescale 1 ns / 1 ps

module top ( RGB, VSYNC, PLL_out, HSYNC, clappy );
  input  clappy;
  output [5:0] RGB;
  output VSYNC, PLL_out, HSYNC;
  wire   \vga_inst/n45_adj_71[2] , \vga_inst/n45_adj_71[1] , \vga_inst/n865 , 
         \col_num[2] , \vga_inst/n502 , \vga_inst/col_num[1] , \vga_inst/n281 , 
         clk2, \vga_inst/n504 , \vga_inst/n45[9] , \vga_inst/n886 , 
         \vga_inst/n521 , \vga_inst/row_num[9] , \vga_inst/n296 , 
         \vga_inst/n45[8] , \vga_inst/n45[7] , \vga_inst/n883 , 
         \vga_inst/row_num[8] , \vga_inst/n519 , \vga_inst/row_num[7] , 
         \vga_inst/n45[6] , \vga_inst/n45[5] , \vga_inst/n880 , 
         \vga_inst/row_num[6] , \vga_inst/n517 , \vga_inst/row_num[5] , 
         \vga_inst/n45[4] , \vga_inst/n45[3] , \vga_inst/n877 , 
         \vga_inst/row_num[4] , \vga_inst/n515 , \vga_inst/row_num[3] , 
         \vga_inst/n45[2] , \vga_inst/n45[1] , \vga_inst/n856 , 
         \vga_inst/row_num[2] , \vga_inst/n513 , \vga_inst/row_num[1] , 
         \vga_inst/n45[0] , \vga_inst/n853 , \vga_inst/row_num[0] , VCC_net, 
         \vga_inst/n45_adj_71[9] , \vga_inst/n889 , \vga_inst/n510 , 
         \vga_inst/col_num[9] , \vga_inst/n45_adj_71[8] , 
         \vga_inst/n45_adj_71[7] , \vga_inst/n874 , \vga_inst/col_num[8] , 
         \vga_inst/n508 , \col_num[7] , \vga_inst/n45_adj_71[6] , 
         \vga_inst/n45_adj_71[5] , \vga_inst/n871 , \col_num[6] , 
         \vga_inst/n506 , \col_num[5] , \vga_inst/n45_adj_71[4] , 
         \vga_inst/n45_adj_71[3] , \vga_inst/n868 , \col_num[4] , \col_num[3] , 
         \vga_inst/n45_adj_71[0] , \vga_inst/n862 , \vga_inst/col_num[0] , 
         \vga_inst/n10 , \vga_inst/n723 , \vga_inst/n36 , \vga_inst/n23 , n472, 
         n166, \vga_inst/n375 , \vga_inst/n10_adj_59 , \vga_inst/n4 , 
         \vga_inst/n444 , HSYNC_c, VSYNC_N_43, n225, \vga_inst/n10_adj_69 , 
         \vga_inst/n728 , \vga_inst/n681 , \vga_inst/n74 , \vga_inst/n76 , 
         \vga_inst/n60 , \testpattern_inst/n465 , GND_net, clk, 
         \pll_inst/lscc_pll_inst/feedback_w , PLL_out_c;

  SLICE_0 SLICE_0( .DI1(\vga_inst/n45_adj_71[2] ), 
    .DI0(\vga_inst/n45_adj_71[1] ), .D1(\vga_inst/n865 ), .C1(\col_num[2] ), 
    .D0(\vga_inst/n502 ), .C0(\vga_inst/col_num[1] ), .LSR(\vga_inst/n281 ), 
    .CLK(clk2), .CIN0(\vga_inst/n502 ), .CIN1(\vga_inst/n865 ), 
    .Q0(\vga_inst/col_num[1] ), .Q1(\col_num[2] ), 
    .F0(\vga_inst/n45_adj_71[1] ), .F1(\vga_inst/n45_adj_71[2] ), 
    .COUT1(\vga_inst/n504 ), .COUT0(\vga_inst/n865 ));
  SLICE_1 SLICE_1( .DI0(\vga_inst/n45[9] ), .D1(\vga_inst/n886 ), 
    .D0(\vga_inst/n521 ), .C0(\vga_inst/row_num[9] ), .CE(\vga_inst/n281 ), 
    .LSR(\vga_inst/n296 ), .CLK(clk2), .CIN0(\vga_inst/n521 ), 
    .CIN1(\vga_inst/n886 ), .Q0(\vga_inst/row_num[9] ), .F0(\vga_inst/n45[9] ), 
    .COUT0(\vga_inst/n886 ));
  SLICE_2 SLICE_2( .DI1(\vga_inst/n45[8] ), .DI0(\vga_inst/n45[7] ), 
    .D1(\vga_inst/n883 ), .C1(\vga_inst/row_num[8] ), .D0(\vga_inst/n519 ), 
    .C0(\vga_inst/row_num[7] ), .CE(\vga_inst/n281 ), .LSR(\vga_inst/n296 ), 
    .CLK(clk2), .CIN0(\vga_inst/n519 ), .CIN1(\vga_inst/n883 ), 
    .Q0(\vga_inst/row_num[7] ), .Q1(\vga_inst/row_num[8] ), 
    .F0(\vga_inst/n45[7] ), .F1(\vga_inst/n45[8] ), .COUT1(\vga_inst/n521 ), 
    .COUT0(\vga_inst/n883 ));
  SLICE_3 SLICE_3( .DI1(\vga_inst/n45[6] ), .DI0(\vga_inst/n45[5] ), 
    .D1(\vga_inst/n880 ), .C1(\vga_inst/row_num[6] ), .D0(\vga_inst/n517 ), 
    .C0(\vga_inst/row_num[5] ), .CE(\vga_inst/n281 ), .LSR(\vga_inst/n296 ), 
    .CLK(clk2), .CIN0(\vga_inst/n517 ), .CIN1(\vga_inst/n880 ), 
    .Q0(\vga_inst/row_num[5] ), .Q1(\vga_inst/row_num[6] ), 
    .F0(\vga_inst/n45[5] ), .F1(\vga_inst/n45[6] ), .COUT1(\vga_inst/n519 ), 
    .COUT0(\vga_inst/n880 ));
  SLICE_4 SLICE_4( .DI1(\vga_inst/n45[4] ), .DI0(\vga_inst/n45[3] ), 
    .D1(\vga_inst/n877 ), .C1(\vga_inst/row_num[4] ), .D0(\vga_inst/n515 ), 
    .C0(\vga_inst/row_num[3] ), .CE(\vga_inst/n281 ), .LSR(\vga_inst/n296 ), 
    .CLK(clk2), .CIN0(\vga_inst/n515 ), .CIN1(\vga_inst/n877 ), 
    .Q0(\vga_inst/row_num[3] ), .Q1(\vga_inst/row_num[4] ), 
    .F0(\vga_inst/n45[3] ), .F1(\vga_inst/n45[4] ), .COUT1(\vga_inst/n517 ), 
    .COUT0(\vga_inst/n877 ));
  SLICE_5 SLICE_5( .DI1(\vga_inst/n45[2] ), .DI0(\vga_inst/n45[1] ), 
    .D1(\vga_inst/n856 ), .C1(\vga_inst/row_num[2] ), .D0(\vga_inst/n513 ), 
    .C0(\vga_inst/row_num[1] ), .CE(\vga_inst/n281 ), .LSR(\vga_inst/n296 ), 
    .CLK(clk2), .CIN0(\vga_inst/n513 ), .CIN1(\vga_inst/n856 ), 
    .Q0(\vga_inst/row_num[1] ), .Q1(\vga_inst/row_num[2] ), 
    .F0(\vga_inst/n45[1] ), .F1(\vga_inst/n45[2] ), .COUT1(\vga_inst/n515 ), 
    .COUT0(\vga_inst/n856 ));
  SLICE_6 SLICE_6( .DI1(\vga_inst/n45[0] ), .D1(\vga_inst/n853 ), 
    .C1(\vga_inst/row_num[0] ), .B1(VCC_net), .CE(\vga_inst/n281 ), 
    .LSR(\vga_inst/n296 ), .CLK(clk2), .CIN1(\vga_inst/n853 ), 
    .Q1(\vga_inst/row_num[0] ), .F1(\vga_inst/n45[0] ), 
    .COUT1(\vga_inst/n513 ), .COUT0(\vga_inst/n853 ));
  SLICE_7 SLICE_7( .DI0(\vga_inst/n45_adj_71[9] ), .D1(\vga_inst/n889 ), 
    .D0(\vga_inst/n510 ), .C0(\vga_inst/col_num[9] ), .LSR(\vga_inst/n281 ), 
    .CLK(clk2), .CIN0(\vga_inst/n510 ), .CIN1(\vga_inst/n889 ), 
    .Q0(\vga_inst/col_num[9] ), .F0(\vga_inst/n45_adj_71[9] ), 
    .COUT0(\vga_inst/n889 ));
  SLICE_8 SLICE_8( .DI1(\vga_inst/n45_adj_71[8] ), 
    .DI0(\vga_inst/n45_adj_71[7] ), .D1(\vga_inst/n874 ), 
    .C1(\vga_inst/col_num[8] ), .D0(\vga_inst/n508 ), .C0(\col_num[7] ), 
    .LSR(\vga_inst/n281 ), .CLK(clk2), .CIN0(\vga_inst/n508 ), 
    .CIN1(\vga_inst/n874 ), .Q0(\col_num[7] ), .Q1(\vga_inst/col_num[8] ), 
    .F0(\vga_inst/n45_adj_71[7] ), .F1(\vga_inst/n45_adj_71[8] ), 
    .COUT1(\vga_inst/n510 ), .COUT0(\vga_inst/n874 ));
  SLICE_9 SLICE_9( .DI1(\vga_inst/n45_adj_71[6] ), 
    .DI0(\vga_inst/n45_adj_71[5] ), .D1(\vga_inst/n871 ), .C1(\col_num[6] ), 
    .D0(\vga_inst/n506 ), .C0(\col_num[5] ), .LSR(\vga_inst/n281 ), .CLK(clk2), 
    .CIN0(\vga_inst/n506 ), .CIN1(\vga_inst/n871 ), .Q0(\col_num[5] ), 
    .Q1(\col_num[6] ), .F0(\vga_inst/n45_adj_71[5] ), 
    .F1(\vga_inst/n45_adj_71[6] ), .COUT1(\vga_inst/n508 ), 
    .COUT0(\vga_inst/n871 ));
  SLICE_10 SLICE_10( .DI1(\vga_inst/n45_adj_71[4] ), 
    .DI0(\vga_inst/n45_adj_71[3] ), .D1(\vga_inst/n868 ), .C1(\col_num[4] ), 
    .D0(\vga_inst/n504 ), .C0(\col_num[3] ), .LSR(\vga_inst/n281 ), .CLK(clk2), 
    .CIN0(\vga_inst/n504 ), .CIN1(\vga_inst/n868 ), .Q0(\col_num[3] ), 
    .Q1(\col_num[4] ), .F0(\vga_inst/n45_adj_71[3] ), 
    .F1(\vga_inst/n45_adj_71[4] ), .COUT1(\vga_inst/n506 ), 
    .COUT0(\vga_inst/n868 ));
  SLICE_11 SLICE_11( .DI1(\vga_inst/n45_adj_71[0] ), .D1(\vga_inst/n862 ), 
    .C1(\vga_inst/col_num[0] ), .B1(VCC_net), .LSR(\vga_inst/n281 ), 
    .CLK(clk2), .CIN1(\vga_inst/n862 ), .Q1(\vga_inst/col_num[0] ), 
    .F1(\vga_inst/n45_adj_71[0] ), .COUT1(\vga_inst/n502 ), 
    .COUT0(\vga_inst/n862 ));
  SLICE_12 SLICE_12( .D1(\col_num[5] ), .C1(\vga_inst/col_num[1] ), 
    .B1(\vga_inst/col_num[0] ), .A1(\col_num[2] ), .D0(\col_num[3] ), 
    .C0(\col_num[4] ), .B0(\col_num[6] ), .A0(\col_num[7] ), 
    .F0(\vga_inst/n10 ), .F1(\vga_inst/n723 ));
  SLICE_13 SLICE_13( .D1(\vga_inst/col_num[9] ), .C1(\vga_inst/n36 ), 
    .B1(\vga_inst/n23 ), .A1(\vga_inst/row_num[9] ), .D0(\vga_inst/n723 ), 
    .C0(n472), .B0(\vga_inst/n10 ), .A0(\vga_inst/col_num[8] ), 
    .F0(\vga_inst/n36 ), .F1(n166));
  SLICE_14 SLICE_14( .D1(\vga_inst/row_num[1] ), .C1(\vga_inst/n375 ), 
    .B1(\vga_inst/row_num[3] ), .A1(\vga_inst/row_num[2] ), 
    .D0(\vga_inst/row_num[8] ), .C0(\vga_inst/row_num[5] ), 
    .B0(\vga_inst/row_num[7] ), .A0(\vga_inst/row_num[6] ), 
    .F0(\vga_inst/n375 ), .F1(\vga_inst/n10_adj_59 ));
  SLICE_15 SLICE_15( .D0(\vga_inst/row_num[9] ), .C0(\vga_inst/n4 ), 
    .B0(\vga_inst/n375 ), .A0(\vga_inst/n281 ), .F0(\vga_inst/n296 ));
  SLICE_16 SLICE_16( .D1(\vga_inst/col_num[9] ), .C1(\vga_inst/n444 ), 
    .B1(\col_num[7] ), .A1(\vga_inst/col_num[8] ), .D0(\col_num[6] ), 
    .C0(\col_num[5] ), .F0(\vga_inst/n444 ), .F1(HSYNC_c));
  SLICE_19 SLICE_19( .C0(\vga_inst/n10_adj_59 ), .B0(\vga_inst/row_num[4] ), 
    .A0(\vga_inst/row_num[9] ), .F0(VSYNC_N_43));
  SLICE_20 SLICE_20( .D1(\col_num[5] ), .C1(n225), .B1(\vga_inst/col_num[9] ), 
    .A1(\vga_inst/col_num[8] ), .D0(\col_num[6] ), .C0(\col_num[7] ), 
    .F0(n225), .F1(\vga_inst/n281 ));
  SLICE_22 SLICE_22( .D1(\vga_inst/n10_adj_69 ), .C1(\vga_inst/n728 ), 
    .B1(\vga_inst/row_num[8] ), .A1(\vga_inst/n681 ), 
    .D0(\vga_inst/row_num[6] ), .B0(\vga_inst/row_num[7] ), 
    .F0(\vga_inst/n728 ), .F1(\vga_inst/n23 ));
  SLICE_24 SLICE_24( .D1(\vga_inst/row_num[5] ), .C1(\vga_inst/n74 ), 
    .B1(\vga_inst/row_num[6] ), .A1(\vga_inst/row_num[7] ), 
    .C0(\vga_inst/row_num[3] ), .B0(\vga_inst/row_num[2] ), 
    .A0(\vga_inst/row_num[4] ), .F0(\vga_inst/n74 ), .F1(\vga_inst/n681 ));
  SLICE_26 SLICE_26( .D1(\vga_inst/row_num[4] ), .C1(\vga_inst/n76 ), 
    .B1(\vga_inst/row_num[2] ), .A1(\vga_inst/row_num[3] ), 
    .D0(\vga_inst/row_num[1] ), .A0(\vga_inst/row_num[0] ), 
    .F0(\vga_inst/n76 ), .F1(\vga_inst/n4 ));
  SLICE_28 SLICE_28( .D1(\vga_inst/row_num[4] ), .C1(\vga_inst/n60 ), 
    .B1(\vga_inst/row_num[3] ), .A1(\vga_inst/row_num[5] ), 
    .D0(\vga_inst/row_num[1] ), .C0(\vga_inst/row_num[2] ), 
    .B0(\vga_inst/row_num[0] ), .F0(\vga_inst/n60 ), 
    .F1(\vga_inst/n10_adj_69 ));
  SLICE_30 SLICE_30( .D1(\col_num[5] ), .C1(\testpattern_inst/n465 ), 
    .B1(\col_num[4] ), .A1(n225), .D0(\col_num[3] ), .A0(\col_num[2] ), 
    .F0(\testpattern_inst/n465 ), .F1(n472));
  SLICE_34 SLICE_34( .F0(GND_net));
  SLICE_35 SLICE_35( .F0(VCC_net));
  hsosc_inst hsosc_inst( .CLKHFPU(VCC_net), .CLKHFEN(VCC_net), .CLKHF(clk));
  pll_inst_lscc_pll_inst_u_PLL_B \pll_inst.lscc_pll_inst.u_PLL_B ( 
    .REFERENCECLK(clk), .FEEDBACK(\pll_inst/lscc_pll_inst/feedback_w ), 
    .RESET_N(VCC_net), .INTFBOUT(\pll_inst/lscc_pll_inst/feedback_w ), 
    .OUTCORE(PLL_out_c), .OUTGLOBAL(clk2));
  RGB_5_ \RGB[5]_I ( .PADDO(GND_net), .RGB5(RGB[5]));
  RGB_4_ \RGB[4]_I ( .PADDO(GND_net), .RGB4(RGB[4]));
  RGB_3_ \RGB[3]_I ( .PADDO(n166), .RGB3(RGB[3]));
  VSYNC VSYNC_I( .PADDO(VSYNC_N_43), .VSYNC(VSYNC));
  PLL_out PLL_out_I( .PADDO(PLL_out_c), .PLL_out(PLL_out));
  RGB_2_ \RGB[2]_I ( .PADDO(n166), .RGB2(RGB[2]));
  RGB_1_ \RGB[1]_I ( .PADDO(GND_net), .RGB1(RGB[1]));
  RGB_0_ \RGB[0]_I ( .PADDO(n166), .RGB0(RGB[0]));
  HSYNC HSYNC_I( .PADDO(HSYNC_c), .HSYNC(HSYNC));
endmodule

module SLICE_0 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \vga_inst/col_num_25_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_inst/col_num_25__i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_inst/col_num_25__i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module SLICE_1 ( input DI0, D1, D0, C0, CE, LSR, CLK, CIN0, CIN1, output Q0, 
    F0, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \vga_inst/row_num_27_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_inst/row_num_27__i9 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_2 ( input DI1, DI0, D1, C1, D0, C0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \vga_inst/row_num_27_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_inst/row_num_27__i7 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \vga_inst/row_num_27__i8 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_3 ( input DI1, DI0, D1, C1, D0, C0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \vga_inst/row_num_27_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_inst/row_num_27__i5 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \vga_inst/row_num_27__i6 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_4 ( input DI1, DI0, D1, C1, D0, C0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \vga_inst/row_num_27_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_inst/row_num_27__i3 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \vga_inst/row_num_27__i4 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_5 ( input DI1, DI0, D1, C1, D0, C0, CE, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  fa2 \vga_inst/row_num_27_add_4_3 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_inst/row_num_27__i1 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  ffsre2 \vga_inst/row_num_27__i2 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_6 ( input DI1, D1, C1, B1, CE, LSR, CLK, CIN1, output Q1, F1, 
    COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \vga_inst/row_num_27_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_inst/row_num_27__i0 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_7 ( input DI0, D1, D0, C0, LSR, CLK, CIN0, CIN1, output Q0, F0, 
    COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \vga_inst/col_num_25_add_4_11 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_inst/col_num_25__i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_8 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \vga_inst/col_num_25_add_4_9 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_inst/col_num_25__i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_inst/col_num_25__i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_9 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, output 
    Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \vga_inst/col_num_25_add_4_7 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_inst/col_num_25__i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_inst/col_num_25__i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_10 ( input DI1, DI0, D1, C1, D0, C0, LSR, CLK, CIN0, CIN1, 
    output Q0, Q1, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  fa2 \vga_inst/col_num_25_add_4_5 ( .A0(GNDI), .B0(GNDI), .C0(C0), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(C1), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \vga_inst/col_num_25__i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_inst/col_num_25__i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_11 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, output Q1, F1, COUT1, 
    COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \vga_inst/col_num_25_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \vga_inst/col_num_25__i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_12 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut4 \vga_inst/i581_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40001 \vga_inst/i4_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0xEA00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_13 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40002 \vga_inst/i2_4_lut_adj_8 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40003 \vga_inst/i46_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40002 ( input A, B, C, D, output Z );

  LUT4 #("0x0040") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0x4E0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_14 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40004 \vga_inst/i4_4_lut_adj_7 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40005 \vga_inst/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_15 ( input D0, C0, B0, A0, output F0 );

  lut40006 \vga_inst/i221_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0xA800") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_16 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40007 \vga_inst/i3_4_lut_adj_9 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40008 \vga_inst/i370_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_19 ( input C0, B0, A0, output F0 );
  wire   GNDI;

  lut40009 \vga_inst/i5_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_20 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40010 \vga_inst/i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40011 \testpattern_inst/i157_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0x8880") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_22 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40012 \vga_inst/i47_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40013 \vga_inst/i579_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0x7444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_24 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40014 \vga_inst/i543_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40015 \vga_inst/i79_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0xFEEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0xEAEA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_26 ( input D1, C1, B1, A1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40016 \vga_inst/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40017 \vga_inst/i81_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0xFF80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0xFFAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_28 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40018 \vga_inst/i4_4_lut_adj_10 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40019 \vga_inst/i73_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0xFCF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_30 ( input D1, C1, B1, A1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40020 \testpattern_inst/i398_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40021 \testpattern_inst/i391_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0xFEAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0xAA00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_34 ( output F0 );
  wire   GNDI;

  lut40022 i1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0x0000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_35 ( output F0 );
  wire   GNDI;

  lut40023 i688( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module hsosc_inst ( input CLKHFPU, CLKHFEN, output CLKHF );
  wire   GNDI;

  HSOSC_CORE_B hsosc_inst( .CLKHFPU(CLKHFPU), .CLKHFEN(CLKHFEN), .TRIM9(GNDI), 
    .TRIM8(GNDI), .TRIM7(GNDI), .TRIM6(GNDI), .TRIM5(GNDI), .TRIM4(GNDI), 
    .TRIM3(GNDI), .TRIM2(GNDI), .TRIM1(GNDI), .TRIM0(GNDI), .CLKHF(CLKHF));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module HSOSC_CORE_B ( input CLKHFPU, CLKHFEN, TRIM9, TRIM8, TRIM7, TRIM6, 
    TRIM5, TRIM4, TRIM3, TRIM2, TRIM1, TRIM0, output CLKHF );

  HSOSC_CORE INST10( .CLKHFPU(CLKHFPU), .CLKHFEN(CLKHFEN), .TRIM9(TRIM9), 
    .TRIM8(TRIM8), .TRIM7(TRIM7), .TRIM6(TRIM6), .TRIM5(TRIM5), .TRIM4(TRIM4), 
    .TRIM3(TRIM3), .TRIM2(TRIM2), .TRIM1(TRIM1), .TRIM0(TRIM0), .CLKHF(CLKHF));
  defparam INST10.CLKHF_DIV = "0b00";
  defparam INST10.FABRIC_TRIME = "DISABLE";
endmodule

module pll_inst_lscc_pll_inst_u_PLL_B ( input REFERENCECLK, FEEDBACK, RESET_N, 
    output INTFBOUT, OUTCORE, OUTGLOBAL );
  wire   GNDI;

  PLL_B_B \pll_inst/lscc_pll_inst/u_PLL_B ( .REFERENCECLK(REFERENCECLK), 
    .FEEDBACK(FEEDBACK), .DYNAMICDELAY7(GNDI), .DYNAMICDELAY6(GNDI), 
    .DYNAMICDELAY5(GNDI), .DYNAMICDELAY4(GNDI), .DYNAMICDELAY3(GNDI), 
    .DYNAMICDELAY2(GNDI), .DYNAMICDELAY1(GNDI), .DYNAMICDELAY0(GNDI), 
    .BYPASS(GNDI), .RESET_N(RESET_N), .SCLK(GNDI), .SDI(GNDI), .LATCH(GNDI), 
    .INTFBOUT(INTFBOUT), .OUTCORE(OUTCORE), .OUTGLOBAL(OUTGLOBAL), .OUTCOREB(), 
    .OUTGLOBALB(), .SDO(), .LOCK());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (REFERENCECLK => OUTCORE) = (0:0:0,0:0:0);
    (REFERENCECLK => OUTGLOBAL) = (0:0:0,0:0:0);
  endspecify

endmodule

module PLL_B_B ( input REFERENCECLK, FEEDBACK, DYNAMICDELAY7, DYNAMICDELAY6, 
    DYNAMICDELAY5, DYNAMICDELAY4, DYNAMICDELAY3, DYNAMICDELAY2, DYNAMICDELAY1, 
    DYNAMICDELAY0, BYPASS, RESET_N, SCLK, SDI, LATCH, output INTFBOUT, OUTCORE, 
    OUTGLOBAL, OUTCOREB, OUTGLOBALB, SDO, LOCK );

  PLL_B INST10( .REFERENCECLK(REFERENCECLK), .FEEDBACK(FEEDBACK), 
    .DYNAMICDELAY7(DYNAMICDELAY7), .DYNAMICDELAY6(DYNAMICDELAY6), 
    .DYNAMICDELAY5(DYNAMICDELAY5), .DYNAMICDELAY4(DYNAMICDELAY4), 
    .DYNAMICDELAY3(DYNAMICDELAY3), .DYNAMICDELAY2(DYNAMICDELAY2), 
    .DYNAMICDELAY1(DYNAMICDELAY1), .DYNAMICDELAY0(DYNAMICDELAY0), 
    .BYPASS(BYPASS), .RESET_N(RESET_N), .SCLK(SCLK), .SDI(SDI), .LATCH(LATCH), 
    .INTFBOUT(INTFBOUT), .OUTCORE(OUTCORE), .OUTGLOBAL(OUTGLOBAL), 
    .OUTCOREB(OUTCOREB), .OUTGLOBALB(OUTGLOBALB), .SDO(SDO), .LOCK(LOCK));
  defparam INST10.DELAY_ADJUSTMENT_MODE_FEEDBACK = "FIXED";
  defparam INST10.DELAY_ADJUSTMENT_MODE_RELATIVE = "FIXED";
  defparam INST10.DIVF = "66";
  defparam INST10.DIVQ = "5";
  defparam INST10.DIVR = "3";
  defparam INST10.ENABLE_ICEGATE_PORTA = "0";
  defparam INST10.ENABLE_ICEGATE_PORTB = "0";
  defparam INST10.FDA_FEEDBACK = "0";
  defparam INST10.FDA_RELATIVE = "0";
  defparam INST10.FEEDBACK_PATH = "SIMPLE";
  defparam INST10.FILTER_RANGE = "1";
  defparam INST10.PLLOUT_SELECT_PORTA = "GENCLK";
  defparam INST10.PLLOUT_SELECT_PORTB = "GENCLK";
  defparam INST10.SHIFTREG_DIV_MODE = "0";
  defparam INST10.TEST_MODE = "0";
  defparam INST10.EXTERNAL_DIVIDE_FACTOR = "NONE";
  defparam INST10.FREQUENCY_PIN_REFERENCECLK = "48.000000";
endmodule

module RGB_5_ ( input PADDO, output RGB5 );
  wire   VCCI;

  BB_B_B \RGB_pad[5].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(RGB5));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => RGB5) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module RGB_4_ ( input PADDO, output RGB4 );
  wire   VCCI;

  BB_B_B \RGB_pad[4].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(RGB4));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => RGB4) = (0:0:0,0:0:0);
  endspecify

endmodule

module RGB_3_ ( input PADDO, output RGB3 );
  wire   VCCI;

  BB_B_B \RGB_pad[3].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(RGB3));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => RGB3) = (0:0:0,0:0:0);
  endspecify

endmodule

module VSYNC ( input PADDO, output VSYNC );
  wire   VCCI;

  BB_B_B \VSYNC_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(VSYNC));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => VSYNC) = (0:0:0,0:0:0);
  endspecify

endmodule

module PLL_out ( input PADDO, output PLL_out );
  wire   VCCI;

  BB_B_B \PLL_out_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(PLL_out));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => PLL_out) = (0:0:0,0:0:0);
  endspecify

endmodule

module RGB_2_ ( input PADDO, output RGB2 );
  wire   VCCI;

  BB_B_B \RGB_pad[2].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(RGB2));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => RGB2) = (0:0:0,0:0:0);
  endspecify

endmodule

module RGB_1_ ( input PADDO, output RGB1 );
  wire   VCCI;

  BB_B_B \RGB_pad[1].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(RGB1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => RGB1) = (0:0:0,0:0:0);
  endspecify

endmodule

module RGB_0_ ( input PADDO, output RGB0 );
  wire   VCCI;

  BB_B_B \RGB_pad[0].bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(RGB0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => RGB0) = (0:0:0,0:0:0);
  endspecify

endmodule

module HSYNC ( input PADDO, output HSYNC );
  wire   VCCI;

  BB_B_B \HSYNC_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(HSYNC));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => HSYNC) = (0:0:0,0:0:0);
  endspecify

endmodule
